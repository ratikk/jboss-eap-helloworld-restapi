name: Docker Image CICD

on:
  push:
    branches: [ "main" ]
  #pull_request:
   # branches: [ "main" ]
  #schedule:
   # - cron: "*/1 * * * *"

jobs:

  cron:
    # The type of runner that the job will run on
    runs-on: runner2
 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Run PR request
        run: |
          
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/swagatam04/jboss-eap-helloworld-restapi/merges \
            -d '{"base":"main","head":"feature","commit_message":"Shipped cool_feature!"}'

  build:
    needs: cron
    runs-on: runner2
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: |
        mvn clean package wildfly:deploy
        echo "Building docker image for github container registry"
        docker build . --file Dockerfile --tag ghcr.io/swagatam04/jboss-eap-api:${{ github.sha }}
        
        echo "Building docker image for jfrog registry"
        docker build . --file Dockerfile --tag swagatam04.jfrog.io/demo-docker/jboss-eap-api:${{ github.sha }}
        
        echo "##########################################"
        echo "Copy package to Jfrog"
        jf rt u --server-id=jfrogdemo --flat=false --include-dirs=true --recursive=true "target/*.war" maven-demo/
        echo "###########################################"
    
  

  publish-jboss-eap-runner-image:
     needs: build
     runs-on: runner2
     steps:
      - uses: actions/checkout@v2
      
      - name: Build the jboss-eap Docker image5
        shell: bash
        env:
          JFROGSECRET: ${{ secrets.JFROGSECRET }}
        run: |
          echo "Pushing image to github container registry"
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin 
          docker push ghcr.io/swagatam04/jboss-eap-api:${{ github.sha }}
          
          echo "Pushing the image to jfrog repo"
          echo ${{ secrets.JFROGSECRET }} | docker login -uskundu012@gmail.com swagatam04.jfrog.io --password-stdin 
          docker push swagatam04.jfrog.io/demo-docker/jboss-eap-api:${{ github.sha }}
          
          
  image-scan:
    needs: publish-jboss-eap-runner-image
    runs-on: deploy-server
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/swagatam04/jboss-eap-api:${{ github.sha }}'
          format: 'sarif'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'   
          
          
  run-jboss-eap-runner-image:
    needs: image-scan
    runs-on: deploy-server
    steps:
    - uses: actions/checkout@v2
    - name: Run Jboss-eap 
      run: |
        image=$(docker ps -a|grep jboss-eap-api|awk '{print $1}'|wc -l)
        echo $image
        if [ $image -ge 1 ];then 
          echo "Deleting existing image"
          docker rm -f $(docker ps -a|grep jboss-eap-api|awk '{print $1}')
        else
          echo "no image to delete"
        fi
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker run -itd -p 8008:8008 -p 9990:9990 ghcr.io/swagatam04/jboss-eap-api:${{ github.sha }}
        sleep 10


  check-application-health:
    needs: run-jboss-eap-runner-image
    runs-on: deploy-server
    steps:
    - uses: actions/checkout@v2
    - name: Run Application Health Check
      run: |
       curl -i -X POST http://52.15.53.14:8008/helloworld-html5/hello/json/swagatam -vk
 
